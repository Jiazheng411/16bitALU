// shifter, shift left, shift right, shift right arith

module shifter (
    input a[16],    // a, 16 bit number that needs to be shifted
    input b[16],    // b, 16 bit number that represnets how many bits a needs to be shifted
    input alufn[2], //alufn: ALUFN[0], ALUFN[1],
    output out[16]
  ) {

  always {
    case(alufn){
      2b00: out = a<<b;  // ALUFN[1:0] = 00  shift left
      2b01: out = a>>b;  // ALUFN[1:0] = 01  shift right
      2b11: out = $signed(a)>>>b; // ALUFN[1:0] = 11 shift right arith
      default: out = a;  // default
    }
  }
}
